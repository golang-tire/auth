syntax = "proto3";

package authV1;

option go_package = "internal/proto/v1;auth";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

message UserRole {
    string uuid = 1;
    string role = 2;
    string domain = 3;
    bool enable = 4;
    google.protobuf.Timestamp created_at = 5;
    google.protobuf.Timestamp updated_at = 6;
}

message User {
    string uuid = 1;
    string firstname = 2;
    string lastname = 3;
    string gender = 4;
    string avatar_url = 5;
    string username = 6;
    string password = 7;
    string email = 8;
    bool enable = 9;
    string raw_data = 10;
    repeated UserRole roles = 11;
    google.protobuf.Timestamp created_at = 12;
    google.protobuf.Timestamp updated_at = 13;
}

message ListUsersRequest {
    int64 limit = 1;
    int64 offset = 2;
}

message ListUsersResponse {
    repeated User users = 1;
    int64 total_count = 2;
    int64 limit = 3;
    int64 offset = 4;
}

message GetUserRequest {
    string uuid = 1;
}

message CreateUserRequest {
    string firstname = 1;
    string lastname = 2;
    string gender = 3;
    string avatar_url = 4;
    string username = 5;
    string password = 6;
    string email = 7;
    bool enable = 8;
    string raw_data = 9;
}

message UpdateUserRequest {
    string uuid = 1;
    string firstname = 2;
    string lastname = 3;
    string gender = 4;
    string avatar_url = 5;
    string username = 6;
    string password = 7;
    string email = 8;
    bool enable = 9;
    string raw_data = 10;
}

message DeleteUserRequest {
    string uuid = 1;
}

message AddUserRoleRequest {
    string uuid = 1;
    string role_uuid = 2;
    string domain_uuid = 3;
    bool enable = 4;
}

message UpdateUserRoleRequest {
    string uuid = 1;
    string user_role_uuid = 2;
    string role_uuid = 3;
    string domain_uuid = 4;
    bool enable = 5;
}

message DeleteUserRoleRequest {
    string uuid = 1;
    string user_role_uuid = 2;
}

service UserService {

    // List Users
    rpc ListUsers (ListUsersRequest) returns (ListUsersResponse) {
        option (google.api.http) = {
            get: "/v1/users"
        };
    }
    // Get User
    rpc GetUser (GetUserRequest) returns (User) {
        option (google.api.http) = {
          get: "/v1/users/{uuid}"
        };
    }

    // Create User object request
    rpc CreateUser (CreateUserRequest) returns (User) {
        option (google.api.http) = {
            post: "/v1/users"
            body: "*"
        };
    }

    // Update User object request
    rpc UpdateUser (UpdateUserRequest) returns (User) {
        option (google.api.http) = {
            put: "/v1/users/{uuid}"
            body: "*"
        };
    }

    // Delete User object request
    rpc DeleteUser (DeleteUserRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
          delete: "/v1/users/{uuid}"
        };
    }

    // AddUserRole assign a role to a user
    rpc AddUserRole (AddUserRoleRequest) returns (User) {
        option (google.api.http) = {
            post: "/v1/users/{uuid}/roles"
            body: "*"
        };
    }

    // UpdateUserRole update a user role
    rpc UpdateUserRole (UpdateUserRoleRequest) returns (User) {
        option (google.api.http) = {
            put: "/v1/users/{uuid}/roles/{user_role_uuid}"
            body: "*"
        };
    }

    // DeleteUserRole remove a user role
    rpc DeleteUserRole (DeleteUserRoleRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/users/{uuid}/roles/{user_role_uuid}"
        };
    }
}